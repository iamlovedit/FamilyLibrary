version: '3.4'

services:
  library_gateway:
    restart: on-failure
    container_name: "library_gateway"
    networks:
      - "family_library"
    image: envoyproxy/envoy:v1.11.1
    ports:
      - "5000:80"
    volumes:
      - ./Envoy/envoy.yaml:/etc/envoy/envoy.yaml

  dynamo_package:
    restart: on-failure
    container_name: "dynamo_package"
    networks:
      - "family_library"
    depends_on:
      - postgresql
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5001:80"
    image: ${DOCKER_REGISTRY-}dynamo_package
    build:
      context: .
      dockerfile: GalaFamilyLibrary.DynamoPackageService/Dockerfile
  
  family_library:
    restart: on-failure
    container_name: "family_library"
    networks:
      - "family_library"
    depends_on:
      - postgresql
      - redis
      - file_storage
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "6001:80"
    image: ${DOCKER_REGISTRY-}family_library
    build:
      context: .
      dockerfile: GalaFamilyLibrary.FamilyService/Dockerfile

  library_identity:
    restart: on-failure
    container_name: "library_identity"
    networks:
      - "family_library"
    depends_on:
      - postgresql
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "7001:80"
    image: ${DOCKER_REGISTRY-}library_identity
    build:
      context: .
      dockerfile: GalaFamilyLibrary.IdentityService/Dockerfile

  file_storage:
    restart: on-failure
    container_name: "file_storage"
    networks:
      - "family_library"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "8001:80"
    image: ${DOCKER_REGISTRY-}file_storage
    volumes:
      - /usr/local/docker/familyLibrary/files:/app/files
    build:
      context: .
      dockerfile: GalaFamilyLibrary.IdentityService/Dockerfile
  
  postgresql:
    environment:
      POSTGRES_USER: $DATABASE_USERID
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_DATABASE
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /usr/local/docker/postgresql/data/pgdata:/var/lib/postgresql/data/pgdata
  redis:
    networks:
      - "family_library"
    restart: always
    container_name: "redis"
    image: "redis"
    ports:
      - "6379:6379"
    command:
      redis-server --requirepass $REDIS_PASSWORD
  
  seqcli:
    image: datalust/seqcli:latest
    container_name: "seqcli"
    command: apikey create -t newapikey --token tZSCDVnAbyYZB1s4twSl -s http://seq
    depends_on:
      - seq
    restart: on-failure
    networks:
      - family_library
  seq:
    image: datalust/seq:latest
    container_name: "seq"
    volumes:
      - /usr/local/docker/seq/data:/data
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    networks:
      - family_library
networks:
  family_library:
    driver: bridge
