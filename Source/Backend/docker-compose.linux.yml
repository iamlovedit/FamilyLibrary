services:
  gala-gateway:
    restart: unless-stopped
    networks:
      - gala-services-net
    ports:
      - "5000:80"
    volumes:
      - ./Envoy/envoy.yaml:/etc/envoy/envoy.yaml
    image: ${DOCKER_REGISTRY-}gala-gateway
    build:
      context: .
      dockerfile: ./Envoy/Dockerfile
  
  gala-package:
    restart: unless-stopped
    networks:
      - gala-services-net
    depends_on:
      - postgresql
      - redis
      - seq
      - mongo
    env_file:
      - .env
    image: ${DOCKER_REGISTRY-}gala-dynamo-packages
    build:
      context: .
      dockerfile: GalaFamilyLibrary.DynamoPackageService/Dockerfile
  
  gala-family:
    restart: unless-stopped
    networks:
      - gala-services-net
    depends_on:
      - postgresql
      - redis
      - seq
      - mongo
    env_file:
      - .env
    volumes:
      - ~/.microsoft/usersecrets/1a1a0cfd-b053-46b9-8625-8b3b9422c6eb/:/root/.microsoft/usersecrets/1a1a0cfd-b053-46b9-8625-8b3b9422c6eb
    image: ${DOCKER_REGISTRY-}gala-family-library
    build:
      context: .
      dockerfile: GalaFamilyLibrary.FamilyService/Dockerfile

  gala-identity:
    restart: unless-stopped
    networks:
      - gala-services-net
    depends_on:
      - postgresql
      - redis
      - seq
      - mongo
    env_file:
      - .env
    image: ${DOCKER_REGISTRY-}gala-identity
    build:
      context: .
      dockerfile: GalaFamilyLibrary.IdentityService/Dockerfile
  
  gala-parameter:
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - gala-services-net
    image: ${DOCKER_REGISTRY-}gala-family-parameters
    depends_on:
      - postgresql
      - redis
      - seq
      - mongo
    build:
      context: .
      dockerfile: GalaFamilyLibrary.ParameterService/Dockerfile

  mongo:
    image: mongo:8
    networks:
      - "gala-services-net"
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./docker/mongo/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"

  postgresql:
    networks:
      - gala-services-net
    restart: unless-stopped
    image: postgres
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DATABASE}
      TZ: "GMT+8"
      PGTZ: "GMT+8"
  
  redis:
    networks:
      - gala-services-net
    restart: unless-stopped
    image: "redis"
    ports:
      - "${REDIS_PORT}:6379"
    command:
      redis-server --requirepass ${REDIS_PASSWORD}

  seqcli:
    image: datalust/seqcli:latest
    container_name: "seqcli"
    command: apikey create -t newapikey --token ${SEQ_APIKEY} -s http://seq
    depends_on:
      - seq
    restart: on-failure:5
    networks:
      - gala-services-net
  seq:
    image: datalust/seq:latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=${SEQ_ADMIN_PASSWORD}
    ports:
      - "5341:80"
    networks:
      - gala-services-net

networks:
  gala-services-net:
    driver: bridge

